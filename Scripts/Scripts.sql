
---Es la creaci√≥n de la Base de Datos
-- Database: social_network

-- DROP DATABASE IF EXISTS social_network;

CREATE DATABASE social_network
    WITH
    OWNER = postgres
    ENCODING = 'UTF8'
    LC_COLLATE = 'es-CO'
    LC_CTYPE = 'es-CO'
    LOCALE_PROVIDER = 'libc'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1
    IS_TEMPLATE = False;


--Es la tabla y secuencial de Usuarios del sistema
-- SEQUENCE: public.users_id_seq

-- DROP SEQUENCE IF EXISTS public.users_id_seq;

CREATE SEQUENCE IF NOT EXISTS public.users_id_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE public.users_id_seq
    OWNER TO postgres;

-- Table: public.users

-- DROP TABLE IF EXISTS public.users;

CREATE TABLE IF NOT EXISTS public.users
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    alias character varying(255) COLLATE pg_catalog."default",
    apellidos character varying(255) COLLATE pg_catalog."default",
    email character varying(255) COLLATE pg_catalog."default",
    fecha_nacimiento date,
    nombres character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT uk6dotkott2kjsp8vw4d0m25fb7 UNIQUE (email)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.users
    OWNER to postgres;
	
--Es la tabla y secuencial de Publicaciones

-- SEQUENCE: public.posts_id_seq

-- DROP SEQUENCE IF EXISTS public.posts_id_seq;

CREATE SEQUENCE IF NOT EXISTS public.posts_id_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1;

ALTER SEQUENCE public.posts_id_seq
    OWNED BY public.posts.id;

ALTER SEQUENCE public.posts_id_seq
    OWNER TO postgres;

-- Table: public.posts

-- DROP TABLE IF EXISTS public.posts;

CREATE TABLE IF NOT EXISTS public.posts
(
    id bigint NOT NULL DEFAULT nextval('posts_id_seq'::regclass),
    mensaje character varying(255) COLLATE pg_catalog."default" NOT NULL,
    usuario character varying(255) COLLATE pg_catalog."default" NOT NULL,
    fecha_publicacion timestamp without time zone NOT NULL,
    total_likes integer DEFAULT 0,
    CONSTRAINT posts_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.posts
    OWNER to postgres;
	

--Es la tabla y secuencial de UsuarioAutorizacion

-- SEQUENCE: public.users_id_seq

-- DROP SEQUENCE IF EXISTS public.users_id_seq;

CREATE SEQUENCE IF NOT EXISTS public.users_id_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE public.users_id_seq
    OWNER TO postgres;

-- Table: public.users

-- DROP TABLE IF EXISTS public.users;

CREATE TABLE IF NOT EXISTS public.users_auth
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    alias character varying(255) COLLATE pg_catalog."default",
    apellidos character varying(255) COLLATE pg_catalog."default",
    email character varying(255) COLLATE pg_catalog."default",
    fecha_nacimiento date,
    nombres character varying(255) COLLATE pg_catalog."default",
    password character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT users_auth_pkey PRIMARY KEY (id),
    CONSTRAINT uk6dotkott2kjsp8vw4d0m25fb7 UNIQUE (email)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.users_auth
    OWNER to postgres;


---Scripts de prueba	
INSERT INTO users (nombres, apellidos, email, password, fecha_nacimiento, alias)
VALUES (
  'Julian', 'Atencio',
  'julian@gmail.com',
  '$2a$10$tJKmAEaMH72o1Oq1Tvk4ruLWUA4VaJ3v6WPMYjeC.RJoPKIbEKR3a',
  '1985-08-05', 'juliancho'
);